/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.text.SimpleDateFormat;
import java.util.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.io.*;
/**
 *
 * @author Admin
 */
public class ChatFrame extends javax.swing.JFrame {
String timestamp,username,saveable,text,user,dir;
File f,dirFile;
BufferedReader br;
BufferedWriter bw;
FileReader fr;
FileWriter fw;
    /**
     * Creates new form ChatFrame
     */
public ChatFrame(){
    
}
   public ChatFrame(String name){
       this.initComponents();
       username = name;
       setTitle(name);
        timestamp = new SimpleDateFormat("dd-MM-YYYY_HH:mm:ss").format(Calendar.getInstance().getTime());
        ChatDisplay.setEditable(false);
        try{
        dir = "Single Thread";
        dirFile = new File(dir);
        if(!dirFile.isDirectory()){
             dirFile.mkdir();
        }
String fileString = "History.txt";
f = new File(dirFile,fileString);
if(!f.exists()){
    f.createNewFile();
    System.out.println("File Created");
}else{
try {
      Scanner in = new Scanner(f);
      String history ="";
       if(history(history) == "" || history(history) == null){
            while(in.hasNextLine()){
          history += in.nextLine()+"\n";
      }
     ChatDisplay.append(history);
       } else{
            ChatDisplay.append(history(history));
       }
     
    } catch (Exception e) {
    e.printStackTrace();
    System.exit(0);
    }}}catch(Exception e){
                e.printStackTrace();
                System.exit(0);}
   }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ChatDisplay = new javax.swing.JTextArea();
        ChatField = new javax.swing.JTextField();
        Send = new javax.swing.JButton();
        LogoutBtn = new javax.swing.JButton();
        ClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ChatDisplay.setColumns(20);
        ChatDisplay.setRows(5);
        jScrollPane1.setViewportView(ChatDisplay);

        Send.setText("Send");
        Send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendActionPerformed(evt);
            }
        });
        Send.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                SendKeyPressed(evt);
            }
        });

        LogoutBtn.setText("Logout");
        LogoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutBtnActionPerformed(evt);
            }
        });
        LogoutBtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                LogoutBtnKeyPressed(evt);
            }
        });

        ClearButton.setText("Clear Chat");
        ClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ChatField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Send)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LogoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(ClearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LogoutBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ClearButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Send)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendActionPerformed
        timestamp = new SimpleDateFormat("dd-MM-YYYY_HH:mm:ss").format(Calendar.getInstance().getTime());
         newMessage(username,timestamp,ChatField.getText());
         saveable = username+ " "+timestamp+":"+ChatField.getText() + "\n";
        ChatDisplay.append(saveable);
        if(f != null){
   try(BufferedWriter bfw  = new BufferedWriter(new FileWriter(f.getAbsoluteFile(),true))){
    bfw.write(saveable);
    bfw.flush();
   } catch(Exception e){
    e.printStackTrace();
    System.exit(0);
}  
        }
        ChatField.setText("");
        ChatField.requestFocus();
    }//GEN-LAST:event_SendActionPerformed

    private void SendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SendKeyPressed
       evt.setKeyCode(13);
       timestamp = new SimpleDateFormat("dd-MM-YYYY_HH:mm:ss").format(Calendar.getInstance().getTime());
      newMessage(username,timestamp,ChatField.getText());
         saveable = username+ " "+timestamp+":"+ChatField.getText() + "\n";
         ChatDisplay.append(saveable);
        if(f != null){
          try(BufferedWriter bfw  = new BufferedWriter(new FileWriter(f.getAbsoluteFile(),true))){
    bfw.write(saveable + "\n");
    bfw.flush();
} catch(Exception e){
    e.printStackTrace();
    System.exit(0);
}  
        }
        ChatField.setText("");
        ChatField.requestFocus();
    }//GEN-LAST:event_SendKeyPressed

    private void LogoutBtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_LogoutBtnKeyPressed
        evt.setKeyCode(13);
        this.dispose();
    }//GEN-LAST:event_LogoutBtnKeyPressed

    private void LogoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutBtnActionPerformed
       this.dispose();
    }//GEN-LAST:event_LogoutBtnActionPerformed

    private void ClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearButtonActionPerformed
        ChatDisplay.setText("");
    }//GEN-LAST:event_ClearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               ChatFrame test =  new ChatFrame();
               test.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextArea ChatDisplay;
    public javax.swing.JTextField ChatField;
    public javax.swing.JButton ClearButton;
    public javax.swing.JButton LogoutBtn;
    public javax.swing.JButton Send;
    public javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

    private static boolean newMessage(java.lang.String name, java.lang.String timestamp, java.lang.String message) {
        resources.Server_Service service = new resources.Server_Service();
        resources.Server port = service.getServerPort();
        return port.newMessage(name, timestamp, message);
    }

    private static String history(java.lang.String arg0) {
        resources.Server_Service service = new resources.Server_Service();
        resources.Server port = service.getServerPort();
        return port.history(arg0);
    }

}
