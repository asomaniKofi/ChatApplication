
package resources;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "Server", targetNamespace = "http://Resources/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Server {


    /**
     * 
     * @param password
     * @param name
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Login")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Login", targetNamespace = "http://Resources/", className = "resources.Login")
    @ResponseWrapper(localName = "LoginResponse", targetNamespace = "http://Resources/", className = "resources.LoginResponse")
    @Action(input = "http://Resources/Server/LoginRequest", output = "http://Resources/Server/LoginResponse")
    public boolean login(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param password
     * @param username
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Register")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Register", targetNamespace = "http://Resources/", className = "resources.Register")
    @ResponseWrapper(localName = "RegisterResponse", targetNamespace = "http://Resources/", className = "resources.RegisterResponse")
    @Action(input = "http://Resources/Server/RegisterRequest", output = "http://Resources/Server/RegisterResponse")
    public boolean register(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password);

    /**
     * 
     * @param name
     * @param message
     * @param timestamp
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "NewMessage")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "NewMessage", targetNamespace = "http://Resources/", className = "resources.NewMessage")
    @ResponseWrapper(localName = "NewMessageResponse", targetNamespace = "http://Resources/", className = "resources.NewMessageResponse")
    @Action(input = "http://Resources/Server/NewMessageRequest", output = "http://Resources/Server/NewMessageResponse")
    public boolean newMessage(
        @WebParam(name = "name", targetNamespace = "")
        String name,
        @WebParam(name = "timestamp", targetNamespace = "")
        String timestamp,
        @WebParam(name = "message", targetNamespace = "")
        String message);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "History")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "History", targetNamespace = "http://Resources/", className = "resources.History")
    @ResponseWrapper(localName = "HistoryResponse", targetNamespace = "http://Resources/", className = "resources.HistoryResponse")
    @Action(input = "http://Resources/Server/HistoryRequest", output = "http://Resources/Server/HistoryResponse")
    public String history(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hello", targetNamespace = "http://Resources/", className = "resources.Hello")
    @ResponseWrapper(localName = "helloResponse", targetNamespace = "http://Resources/", className = "resources.HelloResponse")
    @Action(input = "http://Resources/Server/helloRequest", output = "http://Resources/Server/helloResponse")
    public String hello(
        @WebParam(name = "name", targetNamespace = "")
        String name);

}
